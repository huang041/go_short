version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_short_app
    restart: always
    ports:
      - "9080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - go_short_network

  # 開發模式服務，掛載當前目錄並用於執行 Go 命令
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: go_short_dev
    ports:
      - "9081:8080"
    volumes:
      - .:/app  # 掛載當前目錄到容器的 /app
    depends_on:
      - postgres
      - redis
    networks:
      - go_short_network
    # 使用 tty 和 stdin_open 保持容器運行並允許交互
    tty: true
    stdin_open: true

  postgres:
    image: postgres:14-alpine
    container_name: go_short_db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_short
    ports:
      - "6432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - go_short_network

  redis:
    image: redis:7-alpine
    container_name: go_short_redis
    restart: always
    ports:
      - "7379:6379"
    volumes:
      - redis_data:/data
    networks:
      - go_short_network
    command: redis-server --save 60 1 --loglevel warning

networks:
  go_short_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
